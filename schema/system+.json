{
   "$id": "system+.json",
   "$schema": "http://json-schema.org/draft-07/schema#",
   "title": "FoundryVTT system.json & manifest+",
   "type": "object",
   "allOf": [
      {
         "$id": "shared/properties/base-manifest+.json",
         "$schema": "http://json-schema.org/draft-07/schema#",
         "title": "FoundryVTT shared base for manifest+",
         "type": "object",
         "properties": {
            "conflicts": {
               "description": "The `conflicts` field is similar to the `dependencies` field in the core Foundry VTT manifest specification, but provides a mapping of packages which can not interoperate with the given package.",
               "items": {
                  "properties": {
                     "name": {
                        "description": "The name of the conflict package.",
                        "examples": [
                           "dice-so-nice"
                        ],
                        "title": "Conflict Package Name",
                        "type": "string"
                     },
                     "type": {
                        "description": "The type of the conflict package",
                        "enum": [
                           "module",
                           "system",
                           "world"
                        ],
                        "examples": [
                           "module",
                           "system",
                           "world"
                        ],
                        "title": "Conflict Package Type"
                     },
                     "versionMax": {
                        "description": "Defines a maximum version number for the package within which the conflict occurs.",
                        "errorMessage": "should be a string or number",
                        "examples": [
                           "1.0.0"
                        ],
                        "oneOf": [
                           {
                              "type": "string"
                           },
                           {
                              "type": "number"
                           }
                        ],
                        "title": "Conflict Maximum Version"
                     },
                     "versionMin": {
                        "description": "Defines a minimum version number for the package within which the conflict occurs.",
                        "errorMessage": "should be a string or number",
                        "examples": [
                           "1.0.0"
                        ],
                        "oneOf": [
                           {
                              "type": "string"
                           },
                           {
                              "type": "number"
                           }
                        ],
                        "title": "Conflict Minimum Version"
                     }
                  },
                  "required": [
                     "name",
                     "type"
                  ],
                  "title": "Conflict Entry",
                  "type": "object"
               },
               "title": "Conflicts",
               "type": "array"
            },
            "deprecated": {
               "description": "This field is intended to be added to the manifest of a package that is no longer being maintained and / or is no longer functional / useful.",
               "properties": {
                  "alternatives": {
                     "description": "An array of objects each providing data about another package which could act as a replacement for the deprecated package.",
                     "items": {
                        "properties": {
                           "name": {
                              "description": "Deprecated package name",
                              "examples": [
                                 "module-name"
                              ],
                              "title": "Alternate Package Name",
                              "type": "string"
                           },
                           "manifest": {
                              "description": "The URL of the manifest for the alternative package from which it can be downloaded.",
                              "examples": [
                                 "https://link.com/to/module.json"
                              ],
                              "title": "Alternate Package Manifest",
                              "type": "string"
                           }
                        },
                        "required": [
                           "name",
                           "manifest"
                        ],
                        "title": "Alternative Entry",
                        "type": "object"
                     },
                     "title": "Alternatives",
                     "type": "array"
                  },
                  "coreVersion": {
                     "description": "If set the package is assumed to be a module that has been deprecated by a Foundry VTT core update. This field is the core version number as a string.",
                     "examples": [
                        "0.7.9"
                     ],
                     "title": "Core Version",
                     "type": "string"
                  },
                  "reason": {
                     "description": "A human-readable string explaining why the package was deprecated.",
                     "examples": [
                        "This was added to foundry core."
                     ],
                     "title": "Reason",
                     "type": "string"
                  }
               },
               "title": "Deprecated",
               "type": "object"
            },
            "includes": {
               "description": "The `includes` field is an array of strings where each string is a relative file path that should be included in the package zip archive.",
               "items": {
                  "examples": [
                     "relative/path/to/files/script.js",
                     "relative/path/to/templates/template.html",
                     "path/to/image/assets/folder"
                  ],
                  "title": "Include Entry",
                  "type": "string"
               },
               "title": "Includes",
               "type": "array"
            },
            "library": {
               "description": "The `library` field is a boolean that indicates whether the package is a library intended for other packages to depend on and consume.",
               "examples": [
                  true
               ],
               "title": "Library",
               "type": "boolean"
            },
            "manifestPlusVersion": {
               "description": "Denotes which version of Manifest+ you have implemented.",
               "examples": [
                  "1.1.0"
               ],
               "title": "Manifest+ Version",
               "type": "string"
            },
            "media": {
               "description": "An array of objects that each provide data for a single multimedia item. This data includes a `type` field which indicates what kind of media is being provided as well as an `url` field which provides the address of the media resource.",
               "items": {
                  "description": "An object that provides data for a single multimedia item.",
                  "required": [
                     "type",
                     "url"
                  ],
                  "title": "Media Entry",
                  "type": "object",
                  "properties": {
                     "type": {
                        "description": "Indicates what kind of media.",
                        "enum": [
                           "cover",
                           "icon",
                           "screenshot",
                           "video"
                        ],
                        "title": "Media Type"
                     },
                     "url": {
                        "description": "Public URL of the media resource.",
                        "title": "Media URL",
                        "type": "string"
                     },
                     "loop": {
                        "description": "Optional field specific to video media. If loop is set to true, the video is expected to be treated as an animated image, like a GIF (i.e. muted and looped).",
                        "title": "Video Loop",
                        "type": "boolean"
                     },
                     "thumbnail": {
                        "description": "Optional URL to provide a video thumbnail.",
                        "title": "Video Thumbnail",
                        "type": "string"
                     }
                  }
               },
               "title": "Media",
               "type": "array"
            }
         }
      },
      {
         "$id": "shared/properties/base-system.json",
         "$schema": "http://json-schema.org/draft-07/schema#",
         "title": "FoundryVTT shared base for system.json",
         "type": "object",
         "allOf": [
            {
               "$id": "shared/properties/base.json",
               "$schema": "http://json-schema.org/draft-07/schema#",
               "title": "FoundryVTT common properties for module.json & system.json",
               "type": "object",
               "required": [
                  "name",
                  "title",
                  "description",
                  "author",
                  "version",
                  "minimumCoreVersion"
               ],
               "properties": {
                  "author": {
                     "description": "Provide your name as the package creator. This field can be any string if you wish to include an email address or other contact information also.",
                     "title": "Package Author",
                     "type": "string"
                  },
                  "bugs": {
                     "description": "A publicly accessible URL where issues, suggestions, and bug reports may be filed.",
                     "title": "Bugs URL",
                     "type": "string"
                  },
                  "changelog": {
                     "description": "A publicly accessible URL where update and release notes about the package may be found.",
                     "title": "Changelog URL",
                     "type": "string"
                  },
                  "compatibleCoreVersion": {
                     "description": "Specify the latest Foundry VTT version with which this system's features are confirmed to function properly.",
                     "examples": [
                        "0.7.9"
                     ],
                     "title": "Compatible Core Version",
                     "type": "string"
                  },
                  "dependencies": {
                     "description": "Packages can require other modules, systems, or worlds be installed to allow their use. If a package has been installed with dependencies, but its dependencies are missing it cannot be enabled.",
                     "items": {
                        "properties": {
                           "manifest": {
                              "description": "The manifest attribute provides an explicit manifest URL to be used for downloading the dependency. If a manifest is not provided, the dependency package must exist in the Foundry VTT website directory.",
                              "examples": [
                                 "https://gitlab.com/riccisi/foundryvtt-dice-so-nice/raw/master/module/module.json"
                              ],
                              "title": "Manifest URL",
                              "type": "string"
                           },
                           "name": {
                              "description": "Dependency entries require the name attribute. If only a name is provided, additional details about the package will be discovered from the Foundry VTT website listing.",
                              "examples": [
                                 "dice-so-nice"
                              ],
                              "title": "Package Name",
                              "type": "string"
                           },
                           "type": {
                              "description": "The type attribute instructs Foundry VTT that the dependency may be on a different type of package. By default dependencies are assumed to be module, so if you want to depend on a system or world you should be explicit.",
                              "enum": [
                                 "module",
                                 "system",
                                 "world"
                              ],
                              "examples": [
                                 "module",
                                 "system",
                                 "world"
                              ],
                              "title": "Package Type"
                           }
                        },
                        "required": [
                           "name"
                        ],
                        "title": "Dependency Entry",
                        "type": "object"
                     },
                     "title": "Dependencies",
                     "type": "array"
                  },
                  "description": {
                     "description": "This field can contain a more lengthy description of the module. This text can be used to describe the functionality, list contact information, provide recommendations to contributors or testers, or any other information you feel is important to provide. This field can contain HTML to structure and style your text.",
                     "title": "Package Description",
                     "type": "string"
                  },
                  "download": {
                     "description": "A public URL that provides a zip archive of the package for the manifest version which points to it. The archive at this URL is retrieved during the installation or update process.",
                     "title": "Download URL",
                     "type": "string"
                  },
                  "esmodules": {
                     "description": "In addition to including traditional JavaScript script files, you may also include JS files which use the newer ES module specification. These files are identified separately in the manifest so they may be correctly loaded as an ES module rather than a script.",
                     "items": {
                        "description": "An ES module file path relative to the root directory of the manifest.",
                        "examples": [
                           "index.js"
                        ],
                        "title": "ES Module File",
                        "type": "string"
                     },
                     "title": "ES Modules",
                     "type": "array"
                  },
                  "languages": {
                     "description": "The package may designate an array of languages specifications that it supports by default. Each element in the languages array is an object which defines the language tag, label, and path to its localization file.",
                     "items": {
                        "properties": {
                           "lang": {
                              "description": "A language code in lower-case letters, for example 'en' for English. See: https://en.wikipedia.org/wiki/List_of_ISO_639-2_codes",
                              "examples": [
                                 "en"
                              ],
                              "title": "Language Code",
                              "type": "string"
                           },
                           "name": {
                              "description": "The formal and readable name for the language.",
                              "examples": [
                                 "English"
                              ],
                              "title": "Language Name",
                              "type": "string"
                           },
                           "path": {
                              "description": "A file path relative to the root directory of the manifest where localization strings are provided in JSON format.",
                              "examples": [
                                 "lang/en.json"
                              ],
                              "title": "Language Path",
                              "type": "string"
                           }
                        },
                        "required": [
                           "lang",
                           "name",
                           "path"
                        ],
                        "title": "Language Entry",
                        "type": "object"
                     },
                     "title": "Languages",
                     "type": "array"
                  },
                  "license": {
                     "description": "A path to a license file relative to the root directory of the manifest or a publicly accessible URL which contains the software license that applies to this package.\n\n",
                     "examples": [
                        "LICENSE"
                     ],
                     "title": "License",
                     "type": "string"
                  },
                  "minimumCoreVersion": {
                     "description": "Specify the latest Foundry VTT version which this package features are confirmed to function properly.",
                     "examples": [
                        "0.7.9"
                     ],
                     "title": "Minimum Core Version",
                     "type": "string"
                  },
                  "name": {
                     "description": "Choose a unique package identifier. This should be an all lower-case string with no special characters. This name must align with the name of the parent directory within which you create the package.",
                     "examples": [
                        "my-package-name"
                     ],
                     "title": "Package Name",
                     "type": "string"
                  },
                  "readme": {
                     "description": "A path to a readme file relative to the root package folder or a publicly accessible URL which contains instructions or information about the package.",
                     "examples": [
                        "README.md",
                        "https://github.com/my-user-or-org/my-package/blob/main/README.md"
                     ],
                     "title": "Read Me",
                     "type": "string"
                  },
                  "scripts": {
                     "description": "An array of JavaScript file paths included whenever this package is enabled. Each listed script path should be relative to the package root directory. All scripts which exist will be automatically included in the game session and loaded in their listed order.",
                     "items": {
                        "description": "JavaScript file path; should be relative to the package root directory.",
                        "examples": [
                           "ascript.js"
                        ],
                        "title": "Script Entry",
                        "type": "string"
                     },
                     "title": "Scripts",
                     "type": "array"
                  },
                  "socket": {
                     "description": "A package may request a specialized socket namespace to be provided allowing data messages to be passed between connected clients. If set to true, a socket event will be handled by the server with the event name `module.{name}` or `system.{name}` depending on your package type. This event name relays arbitrary data packets between the sending client and all other connected clients.",
                     "examples": [
                        true
                     ],
                     "title": "Socket",
                     "type": "boolean"
                  },
                  "styles": {
                     "description": "You can designate CSS files which are included in the game session whenever this package is enabled. Each listed stylesheet file path should be relative to the system root directory. All stylesheets which exist will be automatically included in the game session and loaded in their listed order.",
                     "items": {
                        "description": "CSS file path; should be relative to the system root directory.",
                        "examples": [
                           "styles.css"
                        ],
                        "title": "Style Entry",
                        "type": "string"
                     },
                     "title": "Styles",
                     "type": "array"
                  },
                  "title": {
                     "description": "Provide a human readable title for the package which is displayed as the visible name in the Foundry VTT setup menu and elsewhere.",
                     "examples": [
                        "A Module ...",
                        "A System ..."
                     ],
                     "title": "Title",
                     "type": "string"
                  },
                  "url": {
                     "description": "A public URL that links to the repository or documentation pages for the package. This link is displayed to users allowing them to find more information about your package. If your package is hosted in version control like GitHub or GitLab, linking to the repository in this field is a good choice.",
                     "examples": [
                        "https://github.com/my-user-or-org/my-package"
                     ],
                     "title": "URL",
                     "type": "string"
                  },
                  "version": {
                     "description": "The package version number can be a number or a string which denotes the version of your package. We recommend using semantic versioning but this is not strictly required. When making changes to your package, incrementing the version number in your manifest file is used to signal to users that an update is available.",
                     "errorMessage": "should be a string or number",
                     "examples": [
                        "1.0.0"
                     ],
                     "oneOf": [
                        {
                           "type": "string"
                        },
                        {
                           "type": "number"
                        }
                     ],
                     "title": "Version"
                  }
               }
            }
         ],
         "properties": {
            "gridDistance": {
               "description": "This field designates the default amount of distance that a single grid space should typically represent under this game system. This value configures the default value used when a new Scene is created, but can always be changed for each Scene independently.",
               "examples": [
                  5
               ],
               "title": "Grid Distance",
               "type": "integer"
            },
            "gridUnits": {
               "description": "This field designates the standard unit of measure used to describe distances under this game system. This defines the default value used when new a new Scene is created, but can always be changed for each Scene independently.",
               "examples": [
                  "ft, m"
               ],
               "title": "Grid Units",
               "type": "string"
            },
            "initiative": {
               "description": "Not every game system uses the concept of initiative, but this field provides the default dice rolling formula that can be used to determine the turn order of Tokens within the combat tracker.",
               "examples": [
                  "1d20"
               ],
               "title": "Initiative",
               "type": "string"
            },
            "manifest": {
               "description": "A stable URL that describes the latest release version of your manifest file.",
               "examples": [
                  "https://someaddress.com/system.json"
               ],
               "title": "Manifest",
               "type": "string"
            },
            "packs": {
               "items": {
                  "required": [
                     "system",
                     "name",
                     "label",
                     "path",
                     "entity"
                  ],
                  "properties": {
                     "system": {
                        "description": "Since you are creating compendium content specifically for your system, be sure to reference that the content inside each compendium pack requires the system by providing the system name that you chose.",
                        "examples": [
                           "system-name"
                        ],
                        "title": "Pack System",
                        "type": "string"
                     },
                     "entity": {
                        "description": "Each compendium pack must designate a specific Entity type that it contains.",
                        "examples": [
                           "Actor",
                           "Item",
                           "Scene",
                           "JournalEntry",
                           "Macro",
                           "RollTable",
                           "Playlist"
                        ],
                        "title": "Pack Entity",
                        "type": "string"
                     },
                     "label": {
                        "description": "The compendium pack label - this should be a human readable string label which is displayed in the Compendium sidebar in-game.",
                        "examples": [
                           "Pack Title"
                        ],
                        "title": "Pack Label",
                        "type": "string"
                     },
                     "module": {
                        "description": "The module attribute of each compendium pack designates which content module provided the pack. If coming from a system this field can be excluded or list the system name.",
                        "examples": [
                           "module-name",
                           "system-name"
                        ],
                        "title": "Pack Module",
                        "type": "string"
                     },
                     "name": {
                        "description": "The compendium pack name - this should be a unique lower-case string with no special characters.",
                        "examples": [
                           "pack-name"
                        ],
                        "title": "Pack Name",
                        "type": "string"
                     },
                     "path": {
                        "description": "The path for each compendium pack should designate a database file with the .db extension.",
                        "examples": [
                           "./packs/pack-name.db"
                        ],
                        "title": "Pack Path",
                        "type": "string"
                     }
                  },
                  "description": "An object defining a single compendium pack.",
                  "title": "Pack",
                  "type": "object"
               },
               "description": "An array of objects that define all compendium packs.",
               "title": "Packs",
               "type": "array"
            },
            "primaryTokenAttribute": {
               "description": "An attribute path within the system data model that points to an object that contains both a value and max key. The prototype Token for each Actor created in this system will automatically have this resource assigned as it's primary bar. Omit this key or set it to null for no default attribute.",
               "examples": [
                  "resources.health"
               ],
               "title": "Primary Token Attribute",
               "type": [
                  "null",
                  "string"
               ]
            },
            "secondaryTokenAttribute": {
               "description": "An attribute path within the system data model that points to an object that contains both a value and max key. The prototype Token for each Actor created in this system will automatically have this resource assigned as it's secondary bar. Omit this key or set it to null for no default attribute.",
               "examples": [
                  "resources.power"
               ],
               "title": "Secondary Token Attribute",
               "type": [
                  "null",
                  "string"
               ]
            },
            "templateVersion": {
               "description": "The version of the system `template.json`; increment this value when the schema changes.",
               "examples": [
                  2
               ],
               "title": "Template Version",
               "type": "integer"
            }
         }
      }
   ],
   "properties": {
      "authors": {
         "description": "Instead of listing a single author name you may also provide an array of authors, each of which is an object that can contain the keys: 'name', 'discord', 'email', 'patreon', 'reddit', 'twitter', and 'url'.",
         "items": {
            "allOf": [
               {
                  "properties": {
                     "email": {
                        "description": "An email address.",
                        "examples": [
                           "admin@foundryvtt.com"
                        ],
                        "title": "Author Email",
                        "type": "string"
                     },
                     "name": {
                        "description": "An author name.",
                        "examples": [
                           "Atropos"
                        ],
                        "title": "Author Name",
                        "type": "string"
                     },
                     "url": {
                        "description": "An URL for the author.",
                        "examples": [
                           "https://foundryvtt.com"
                        ],
                        "title": "Author URL",
                        "type": "string"
                     }
                  },
                  "required": [
                     "name"
                  ]
               },
               {
                  "properties": {
                     "discord": {
                        "description": "A Discord user ID.",
                        "examples": [
                           "discordID#0001"
                        ],
                        "title": "Author Discord",
                        "type": "string"
                     },
                     "ko-fi": {
                        "description": "A Ko-fi user name.",
                        "examples": [
                           "kofiName"
                        ],
                        "title": "Author Ko-fi",
                        "type": "string"
                     },
                     "patreon": {
                        "description": "A Patreon user name.",
                        "examples": [
                           "patreonName"
                        ],
                        "title": "Author Patreon",
                        "type": "string"
                     },
                     "reddit": {
                        "description": "A Reddit user name.",
                        "examples": [
                           "u/RedditUsername"
                        ],
                        "title": "Author Reddit",
                        "type": "string"
                     },
                     "twitter": {
                        "description": "A Twitter user handle.",
                        "examples": [
                           "@TwitterHandle"
                        ],
                        "title": "Author Twitter",
                        "type": "string"
                     }
                  }
               }
            ],
            "type": "object",
            "title": "Author Entry"
         },
         "title": "Authors",
         "type": "array"
      }
   }
}